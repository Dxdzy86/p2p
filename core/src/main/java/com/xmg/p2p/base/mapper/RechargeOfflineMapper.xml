<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmg.p2p.base.mapper.RechargeOfflineMapper" >
  
  <resultMap id="BaseResultMap" type="com.xmg.p2p.base.domain.RechargeOffline" >
  	<id column="id" property="id" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="auditTime" property="auditTime" jdbcType="TIMESTAMP" />
    <result column="applyTime" property="applyTime" jdbcType="TIMESTAMP" />
    <result column="tradeCode" property="tradeCode" jdbcType="VARCHAR" />
    <result column="tradeTime" property="tradeTime" jdbcType="TIMESTAMP" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    
    <association property="applier" javaType="LoginInfo" columnPrefix="ap_">
    	<id column="id" property="id"/>
    	<result column="username" property="username"/>
    </association>
    <association property="auditor" javaType="LoginInfo" columnPrefix="au_">
    	<id column="id" property="id"/>
    	<result column="username" property="username"/>
    </association>
    <association property="bankInfo" javaType="PlatformBankInfo" columnPrefix="p_">
    	<id column="id" property="id" jdbcType="BIGINT" />
	    <result column="bankName" property="bankName" jdbcType="VARCHAR" />
	    <result column="accountName" property="accountName" jdbcType="VARCHAR" />
	    <result column="bankNumber" property="bankNumber" jdbcType="VARCHAR" />
	    <result column="bankForkName" property="bankForkName" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  
  <insert id="insert" parameterType="com.xmg.p2p.base.domain.RechargeOffline" useGeneratedKeys="true" keyProperty="id" >
    insert into `rechargeoffline` (state, remark, auditTime,applyTime, auditor_id, applier_id, 
      tradeCode, tradeTime, amount,note, bankinfo_id)
    values (#{state,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, #{auditTime,jdbcType=TIMESTAMP}, 
      #{applyTime,jdbcType=TIMESTAMP}, #{auditor.id,jdbcType=BIGINT}, #{applier.id,jdbcType=BIGINT}, 
      #{tradeCode,jdbcType=VARCHAR}, #{tradeTime,jdbcType=TIMESTAMP}, #{amount,jdbcType=DECIMAL}, 
      #{note,jdbcType=VARCHAR}, #{bankInfo.id,jdbcType=BIGINT})
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.xmg.p2p.base.domain.RechargeOffline" >
    update `rechargeoffline`
    set state = #{state,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      auditTime = #{auditTime,jdbcType=TIMESTAMP},
      applyTime = #{applyTime,jdbcType=TIMESTAMP},
      auditor_id = #{auditor.id,jdbcType=BIGINT},
      applier_id = #{applier.id,jdbcType=BIGINT},
      tradeCode = #{tradeCode,jdbcType=VARCHAR},
      tradeTime = #{tradeTime,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=DECIMAL},
      note = #{note,jdbcType=VARCHAR},
      bankinfo_id = #{bankInfo.id,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <sql id="base_column">
  	r.id, r.state, r.remark, r.auditTime, r.applyTime,r.tradeCode, 
    r.tradeTime, r.amount, r.note,
    ap.id as ap_id,ap.username as ap_username,
    au.id as au_id,au.username as au_username,
    p.id as p_id,p.bankName as p_bankName,p.accountName as p_accountName,p.bankNumber as p_bankNumber,p.bankForkName as p_bankForkName
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select <include refid="base_column"/>
    from `rechargeoffline` r join logininfo ap on r.applier_id=ap.id
    left join logininfo au on r.auditor_id=au.id
    join platformbankinfo p on r.bankinfo_id=p.id
    where r.id = #{id,jdbcType=BIGINT}
  </select>
  
  <sql id="base_where">
  	<where>
  		<if test="state>-1">
  			AND r.state=#{state}
  		</if>
  		<if test="beginDate!=null">
  			AND r.tradeTime &gt;=#{beginDate}
  		</if>
  		<if test="endDate!=null">
  			AND r.tradeTime &lt;=#{endDate}
  		</if>
  		<if test="applierId!=null">
  			AND r.applier_id=#{applierId}
  		</if>
  		<if test="tradeCode!=null">
  			AND r.tradeCode=#{tradeCode}
  		</if>
  		<if test="bankInfoId>-1">
  			AND r.bankinfo_id=#{bankInfoId}
  		</if>
  	</where>
  </sql>
  <select id="queryRechargeOfflineCount" resultType="int">
  	select count(r.id) from rechargeoffline r
  	<include refid="base_where"/>
  </select>
  
  <select id="query" resultMap="BaseResultMap">
  	select <include refid="base_column"/>
  	from rechargeoffline r join logininfo ap on r.applier_id=ap.id
  	left join logininfo au on r.auditor_id=au.id
  	join platformbankinfo p on r.bankinfo_id=p.id
    <include refid="base_where"/>
    limit #{start},#{pageSize}
  </select>
</mapper>